// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: configs.sql

package sqlc

import (
	"context"
)

const createConfig = `-- name: CreateConfig :exec
INSERT INTO configs (key, type, value) VALUES ($1, $2, $3)
`

type CreateConfigParams struct {
	Key   string `json:"key"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

// Insert a new configuration setting
func (q *Queries) CreateConfig(ctx context.Context, arg CreateConfigParams) error {
	_, err := q.exec(ctx, q.createConfigStmt, createConfig, arg.Key, arg.Type, arg.Value)
	return err
}

const getConfig = `-- name: GetConfig :one
SELECT key, type, value, description FROM configs WHERE key = $1
`

// Retrieve a configuration setting by key
func (q *Queries) GetConfig(ctx context.Context, key string) (Config, error) {
	row := q.queryRow(ctx, q.getConfigStmt, getConfig, key)
	var i Config
	err := row.Scan(
		&i.Key,
		&i.Type,
		&i.Value,
		&i.Description,
	)
	return i, err
}

const updateConfig = `-- name: UpdateConfig :exec
UPDATE configs SET value = $2 WHERE key = $1
`

type UpdateConfigParams struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// Update an existing configuration setting
func (q *Queries) UpdateConfig(ctx context.Context, arg UpdateConfigParams) error {
	_, err := q.exec(ctx, q.updateConfigStmt, updateConfig, arg.Key, arg.Value)
	return err
}
